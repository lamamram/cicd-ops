image: docker:26.1.3

before_script:
  - >
    echo "$REGISTRY_TOKEN" |
    docker login $CI_REGISTRY
    -u "$CI_REGISTRY_USER"
    --password-stdin

variables:
  MANUAL_TRIGGER: "off"

stages:
  - download
  - build

trigger_dev:
  stage: .pre
  trigger:
    project: myusine/dev
    branch: main
    strategy: depend
  rules:
    - if: $MANUAL_TRIGGER == "on"

download:
  stage: download
  image: curlimages/curl:latest
  before_script: []
  tags:
    - myusine
  script:
    - >
      curl 
      -k 
      --fail-with-body 
      -o ./app-java/tomcat/sample.war 
      --header "JOB-TOKEN: $CI_JOB_TOKEN" 
      ${CI_API_V4_URL}/projects/1/packages/generic/app-java/0.0.1/sample.war
  artifacts:
    expire_in: "1 hour"
    paths:
      - ./app-java/tomcat/sample.war


build:
  stage: build
  tags:
    - myusine
  script:
    - cd app-java/tomcat
    - >
      docker build 
      -t "$CI_REGISTRY_IMAGE/app-java-tomcat:1.0"
      --build-arg TOMCAT_VERSION_MAJOR=9
      --build-arg TOMCAT_VERSION_FULL=9.0.89
      --build-arg CI_API_V4_URL=$CI_API_V4_URL
      --build-arg CI_PROJECT_ID=$CI_PROJECT_ID
      --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN
      .
    - docker run --name test_build -d "$CI_REGISTRY_IMAGE/app-java-tomcat:1.0"
    - sleep 5
    - docker ps -f "name=test_build" | grep -o "(healthy)"
    - docker push "$CI_REGISTRY_IMAGE/app-java-tomcat:1.0"
  after_script:
    - docker rm -f test_build